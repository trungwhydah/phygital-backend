name: CI
on: pull_request

jobs:
  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          cache: true
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
          args: --timeout 5m --verbose
          only-new-issues: true

  yamllint:
    name: runner / yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-yamllint@v1
        with:
          fail_on_error: true
          reporter: github-pr-review
          yamllint_flags: '-d "{extends: default, rules: {truthy: disable}}" .'

  hadolint:
    name: runner / hadolint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-hadolint@v1
        with:
          fail_on_error: true
          reporter: github-pr-review

  dotenv-linter:
    name: runner / dotenv-linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dotenv-linter/action-dotenv-linter@v2
        with:
          reporter: github-pr-review

  check-dependencies:
    name: runner / check-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
      - name: WriteGoList
        run: go list -json -m all > go.list
      - name: Nancy
        uses: sonatype-nexus-community/nancy-github-action@main
        continue-on-error: true

  tests:
    name: runner / tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker-practice/actions-setup-docker@master
        with:
          docker_version: "20.10"
      - uses: actions/setup-go@v4
        with:
          go-version: ~1.20.3
      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Unit Tests
        run: |
          CVPKG=$(go list ./... | grep -v mocks | tr '\n' ',')
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init --parseDependency -g internal/marketplace/api/restful/v1/router.go -o internal/marketplace/docs
          go test -v -cover -coverprofile=coverage.out -covermode=atomic -race ./internal/...
